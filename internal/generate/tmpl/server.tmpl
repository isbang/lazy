// Code generated by lazy. DO NOT EDIT.

package lazy

{{ if .JobNames -}}
import (
	"context"
	"encoding/json"

	"github.com/go-redis/redis/v8"

	"github.com/isbang/lazy"
	"{{ .RootPackageName }}/lazy/job"
)
{{- else -}}
import (
	"github.com/go-redis/redis/v8"

	"github.com/isbang/lazy"
)
{{- end }}

func NewServer(cc redis.UniversalClient) *Server {
	return &Server{
		Server: lazy.NewServer(cc),
	}
}

type Server struct {
	*lazy.Server
}
{{ range .JobNames }}
type {{ . }}JobHandler func(ctx context.Context, job *job.{{ . }}) error

func (h {{ . }}JobHandler) handle(ctx context.Context, jobstr string) error {
	var job job.{{ . }}

	if err := json.Unmarshal([]byte(jobstr), &job); err != nil {
		return err
	}

	job.Attempts++

	return h(ctx, &job)
}

func (s *Server) Register{{ . }}Job(handler {{ . }}JobHandler) {
	var j job.{{ . }}
	s.Server.Register(j.LazyQueueName(), handler.handle)
}
{{ end }}
