// Code generated by lazy. DO NOT EDIT.

package lazy

{{ if .JobNames -}}
import (
	"context"
	"encoding/json"
	"time"

	"github.com/go-redis/redis/v8"
	"github.com/isbang/lazy"

	"{{ .RootPackageName }}/lazy/job"
)
{{- else -}}
import (
	"github.com/isbang/lazy"

	"github.com/go-redis/redis/v8"
)
{{- end }}

func NewClient(cc redis.UniversalClient) *Client {
	return &Client{
		Client: lazy.NewClient(cc),
	}
}

type Client struct {
	*lazy.Client
}
{{ range .JobNames }}
func (c *Client) Do{{ . }}(ctx context.Context, job *job.{{ . }}) error {
	jb, err := json.Marshal(job)
	if err != nil {
		return err
	}

	if err := c.Client.Do(ctx, job.LazyQueueName(), string(jb)); err != nil {
		return err
	}

	return nil
}

func (c *Client) Do{{ . }}After(ctx context.Context, job *job.{{ . }}, delay time.Duration) error {
	jb, err := json.Marshal(job)
	if err != nil {
		return err
	}

	if err := c.Client.DoAfter(ctx, job.LazyQueueName(), string(jb), delay); err != nil {
		return err
	}

	return nil
}
{{ end }}
